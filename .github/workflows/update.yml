name: Update OpenAPI

on:
  workflow_dispatch:

jobs:
  update-models:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    concurrency:
      group: automation-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - run: echo "DATE=$(date +"%Y-%m-%d")" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - run: git checkout -b "automation/update-models-${{ env.DATE }}"
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Generate models and endpoints
        run: mvn -D org.slf4j.simpleLogger.defaultLogLevel=warn clean compiler:compile generate-resources
      - name: Check changes
        run: |
          # Ensure we do not create PR's without code changes
          git diff --exit-code && exit 1 || true
      - name: Determine new version number
        run: |
          CURRENT_VERSION=$(head roctogen/Cargo.toml | grep ^version | awk '{ print $3 }' | tr -d '"')
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          ((minor++))
          patch=0
          sed -i "s/^version = \"$CURRENT_VERSION\"$/version = \"$major.$minor.$patch\"/" roctogen/Cargo.toml
          echo "VERSION=$major.$minor.$patch" >> $GITHUB_ENV
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git status
          git diff
          git add .
          git commit -m "feat: Update models and endpoints for ${{ env.DATE }}"
          git push -u origin "automation/update-models-${{ env.DATE }}"
          git remote -v
          git branch -r
      - name: Create a PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git fetch origin
          git branch -a | grep "automation/update-models-${{ env.DATE }}"
          git checkout "automation/update-models-${{ env.DATE }}"
          # Ensure we don't create a PR if an existing PR already exists
          gh pr list --label automation -L 1 -s open --json id --jq 'if (. | length) > 0 then halt_error(1) else empty end'
          gh pr new -l automation -B master -t "feat: Update models and endpoints for ${{ env.DATE }}" -b ""
